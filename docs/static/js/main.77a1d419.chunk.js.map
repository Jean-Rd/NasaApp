{"version":3,"sources":["components/AddDate.js","helpers/getNasa.js","components/NasaGridItem.js","components/NasaGrid.js","hooks/useFetchNasa.js","NasaApp.js","index.js"],"names":["AddDate","setState","useState","input","setInput","valDate","formSubmit","e","preventDefault","test","className","onSubmit","type","value","placeholder","onChange","target","getNasa","searchDate","numPage","a","url","fetch","request","json","photos","infoPhotos","map","id","camera","earth_date","img_src","rover","name_camera","full_name","id_camera","date","image_url","id_rover","name_rover","name","NasaGridItem","src","with","height","alt","href","rel","NasaGrid","dateTime","dateSearch","pageNum","data","loading","nasa","setNasa","useEffect","then","obj","useFetchNasa","info","infoVal","NasaApp","setDate","currentDate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77a1d419.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddDate = ({ setState }) => {\r\n\r\n    const [input, setInput] = useState('');\r\n    //eslint-disable-next-line\r\n    const valDate =  /^\\d{4}\\-\\d{2}\\-\\d{2}$/;\r\n\r\n    const changeInput = (e) => {\r\n        setInput(e.target.value);\r\n        \r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(valDate.test(input)) {\r\n            setState([input]);\r\n        }\r\n    }\r\n\r\n    return (<div className=\"col-12 px-0\">\r\n            <div className=\"navbar navbar-light bg-dark pb-3\">\r\n                <form onSubmit={ formSubmit } className=\"form-inline w-100 d-flex justify-content-between\">\r\n                    <input type=\"text\" value={ input } placeholder=\"YYYY-MM-DD\" onChange={ changeInput } className=\"form-control mr-sm-2\" aria-label=\"Buscar\"></input>\r\n                    <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\" onSubmit={ formSubmit }>Search</button>\r\n                </form>\r\n            </div>\r\n        </div>) \r\n}\r\n\r\nAddDate.propTypes = {\r\n    setState: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddDate;","export const getNasa = async(searchDate, numPage) => {\r\n    \r\n    const api_key = \"cGPCkNQDaLuMbw2FSXean4CtxcdhZrXfitdsWLNs\";\r\n    // const api_key = \"DEMO_KEY\";\r\n\r\n    const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${ searchDate }?page=${ numPage }&api_key=${ api_key }`\r\n\r\n    // const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(search) }&limit=7&api_key=aqFsyAQsVAAVIBGQ0P7iyS5fvxK7IgXQ`;\r\n\r\n    const request = await fetch(url);\r\n    \r\n\r\n    // const { data } = await request.json();\r\n    const { photos } = await request.json();\r\n\r\n    // { id, img_src, earth_date,camera }\r\n\r\n\r\n    const infoPhotos = photos.map(({ id, camera, earth_date, img_src, rover }) => {\r\n         return {\r\n             id: id,\r\n             camera: {\r\n                 name_camera: camera.full_name,\r\n                 id_camera: camera.id\r\n             },\r\n             date: earth_date,\r\n             image_url: img_src,\r\n             rover: {\r\n                 id_rover: rover.id,\r\n                 name_rover: rover.name,\r\n             }\r\n         }\r\n    })\r\n\r\n\r\n    return infoPhotos;\r\n}\r\n","import React from \"react\";\r\n\r\nexport const NasaGridItem = ({ image_url, date, camera, rover }) => {\r\n    return (\r\n            <>\r\n                <div className=\"card m-3 bg-white p-0\" id=\"grid-item\">\r\n                    <div className=\"row no-gutters p-0\">\r\n                        <div className=\"col-sm-5\" id=\"grid-item__img\">\r\n                            <img src={ image_url } className=\"card-img img-fluid\" with=\"100%\" height=\"100%\" alt={ camera.name_camera }></img>\r\n                        </div>\r\n                        <div className=\"col-sm-7\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className='card-title'>{ camera.name_camera }</h4>\r\n                                <p className=\"card-text\"><small className=\"text-muted\">{ date }</small></p>\r\n                                <h6 className=\"card-title\">{ rover.name_rover }</h6>\r\n                                <a href={ image_url } target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary\">Ver imagen</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n    )\r\n}","import { useFetchNasa } from \"../hooks/useFetchNasa\";\r\nimport React from \"react\";\r\nimport { NasaGridItem } from \"./NasaGridItem\";\r\n\r\nexport const NasaGrid = ( { dateTime } ) => {\r\n\r\n    const { data:info, loading } = useFetchNasa(dateTime);\r\n    // console.log(loading);\r\n    \r\n\r\n    return (\r\n        <div className=\"nasa container my-4 bg-light rounded\">\r\n            <div className=\"nasa-title row py-3 px-2\">\r\n                <h3 className=\"c-white\"> Fecha Ingresada: { dateTime } </h3>\r\n            </div>\r\n\r\n            { loading && <div className=\"row p-2\"><span className=\"text-muted\">Cargando...</span></div> }\r\n\r\n            <div className=\"grid row d-flex align-items-center justify-content-center\">\r\n                {\r\n                    info.map((infoVal) => {\r\n                        return <NasaGridItem key={ infoVal.id } { ...infoVal }/>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { getNasa } from \"../helpers/getNasa\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\n\r\nexport const useFetchNasa = (dateSearch, pageNum=1) => {\r\n\r\n    const [ nasa, setNasa ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getNasa(dateSearch, pageNum)\r\n            .then(obj => setNasa({\r\n                data: obj,\r\n                loading: false\r\n            }))\r\n        }, [ dateSearch, pageNum ]);\r\n    return nasa;\r\n\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport AddDate from \"./components/AddDate\"\r\nimport { NasaGrid } from \"./components/NasaGrid\";\r\n\r\n//import { getNasa } from \"./helpers/getNasa\";\r\n// import { useFetchNasa } from \"./hooks/useFetchNasa\"; \r\n\r\nexport const NasaApp = () => {\r\n\r\n    const [ date, setDate ] = useState([]);\r\n\r\n    return <>\r\n        <div className=\"container-fluid\">\r\n            <h1 className=\"bg-dark text-white row px-2 py-3 mb-0\">NasaAPP</h1>\r\n            <div className=\"row\">\r\n                <AddDate setState={ setDate }/>\r\n            </div>\r\n          \r\n\r\n            {\r\n                date.map(currentDate => {\r\n                    return <NasaGrid key={ currentDate } dateTime={ currentDate }/>\r\n                })\r\n            }\r\n            \r\n        </div>\r\n        \r\n            \r\n    </>\r\n         \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { NasaApp } from './NasaApp';\n\nReactDOM.render(\n    <NasaApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}